enum Role {
  etudiant
  admin
}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Utilisateur {
  id               Int           @id @default(autoincrement())
  nom              String
  prenom           String
  email            String        @unique
  mot_de_passe     String
  role             Role          @default(etudiant)
  date_inscription DateTime      @default(now())
  emprunts         Emprunt[]
  commentaires     Commentaire[]

  @@map("utilisateurs")
}

model Livre {
  id           Int           @id @default(autoincrement())
  titre        String
  auteur       String
  genre        String?
  description  String?
  disponible   Boolean       @default(true)
  date_ajout   DateTime      @default(now())
  emprunts     Emprunt[]
  commentaires Commentaire[]

  @@map("livres")
}

model Emprunt {
  id             Int           @id @default(autoincrement())
  utilisateur    Utilisateur   @relation(fields: [utilisateur_id], references: [id], onDelete: Cascade)
  utilisateur_id Int
  livre          Livre         @relation(fields: [livre_id], references: [id], onDelete: Cascade)
  livre_id       Int
  date_emprunt   DateTime      @default(now())
  date_retour_prevue DateTime?
  date_retour    DateTime?
  rendu          Boolean       @default(false)

  @@map("emprunts")
}

model Commentaire {
  id               Int           @id @default(autoincrement())
  utilisateur      Utilisateur   @relation(fields: [utilisateur_id], references: [id], onDelete: Cascade)
  utilisateur_id   Int
  livre            Livre         @relation(fields: [livre_id], references: [id], onDelete: Cascade)
  livre_id         Int
  commentaire      String?
  note             Int?
  date_commentaire DateTime      @default(now())

  @@map("commentaires")
}